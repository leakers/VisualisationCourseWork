[
  {
    "path": "posts/welcome/",
    "title": "Welcome to Assignment",
    "description": "Welcome to our new blog, Assignment. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-07-28",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-07-28T08:55:40+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-07-28-assignment/",
    "title": "Assignment",
    "description": "VAST challenge 2021 MC2",
    "author": [
      {
        "name": "LIU Nian",
        "url": {}
      }
    ],
    "date": "2021-07-20",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1. Overview\r\n2. Data preparation\r\n2.1 cc_data and loyalty_data\r\n\r\n\r\n1. Overview\r\nOverall Challenge statement:\r\nIn the roughly twenty years that Tethys-based GAStech has been operating a natural gas production site in the island country of Kronos, it has produced remarkable profits and developed strong relationships with the government of Kronos. However, GAStech has not been as successful in demonstrating environmental stewardship.\r\nIn January, 2014, the leaders of GAStech are celebrating their new-found fortune as a result of the initial public offering of their very successful company. In the midst of this celebration, several employees of GAStech go missing. An organization known as the Protectors of Kronos (POK) is suspected in the disappearance, but things may not be what they seem.\r\nAs an expert in visual analytics, you are called in to help law enforcement from Kronos and Tethys\r\nMini Challenge2:\r\nMini-Challenge 2 asks you to analyze movement and tracking data. GAStech provides many of their employees with company cars for their personal and professional use, but unbeknownst to the employees, the cars are equipped with GPS tracking devices. You are given tracking data for the two weeks leading up to the disappearance, as well as credit card transactions and loyalty card usage data. From this data, can you identify anomalies and suspicious behaviors? Can you identify which people use which credit and loyalty cards?\r\nApproach framework\r\n\r\nThe questions themselves offer an actionable approach,which guide us to solve the whole task incrementally.\r\nFirst question require us to detect the anomalies with respect to the location and time based on the cc_data and loyalty_data. This step can also help us to pinpoint the pair of credit card and loyalty card, which are owned by the same employee.SO this underpins the third question.\r\nSecond question hints us to screen out the corresponding Car ID , the owner of who have the abnormal consumption pattern(time and location anomalies) derived from the first question. Further, we can induce the specific employee name baes on the cars-assignment data.\r\nThe third question is on top of answers of the first and second question.\r\nLikewise, the answer of fourth question is also contained with the previous three questions.\r\n2. Data preparation\r\nPackages to be loaded:\r\n\r\n\r\npackages = c('raster', 'sf', \r\n             'tmap', 'clock', 'lubridate',\r\n             'tidyverse','plotly','DT','patchwork','htmltools','mapview')\r\nfor (p in packages){\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p) \r\n  }\r\n  library(p,character.only = T)\r\n}\r\n\r\n\r\n\r\n2.1 cc_data and loyalty_data\r\ncc_data\r\nData import\r\n\r\n\r\ncc_data <- read_csv(\"MC2/cc_data.csv\")\r\nglimpse(cc_data)\r\n\r\n\r\nRows: 1,490\r\nColumns: 4\r\n$ timestamp  <chr> \"01/06/2014 07:28\", \"01/06/2014 07:34\", \"01/06/20~\r\n$ location   <chr> \"Brew've Been Served\", \"Hallowed Grounds\", \"Brew'~\r\n$ price      <dbl> 11.34, 52.22, 8.33, 16.72, 4.24, 4.17, 28.73, 9.6~\r\n$ last4ccnum <dbl> 4795, 7108, 6816, 9617, 7384, 5368, 7253, 4948, 9~\r\n\r\nNew column generation\r\n\r\n\r\ncc_data$timestamp <- date_time_parse(cc_data$timestamp,\r\n                                     zone = \"\",\r\n                                     format = \"%m/%d/%Y %H:%M\")\r\n\r\n\r\n\r\n\r\n\r\ncc_data$location <- as_factor(cc_data$location)\r\ncc_data$last4ccnum <- as_factor(cc_data$last4ccnum)\r\ncc_data_trans <- cc_data%>%\r\n  mutate(day = as_factor(get_day(timestamp)),\r\n         hour = as_factor(get_hour(timestamp)),\r\n         time = format(timestamp, format = \"%H:%M\"))\r\n\r\n\r\n\r\nloyalty data\r\nThe data preparation of cc_data can also be applied to the loyalty_data as below:\r\n\r\n\r\nloyalty_data <- read_csv(\"MC2/loyalty_data.csv\")\r\nloyalty_data$timestamp <- date_time_parse(loyalty_data$timestamp,\r\n                                          zone = \"\",\r\n                                          format = \"%m/%d/%Y\")\r\n\r\nloyalty_data$location <- as_factor(loyalty_data$location)\r\nloyalty_data$loyaltynum <- as_factor(loyalty_data$loyaltynum)\r\nloyalty_data_trans <- loyalty_data%>%\r\n  mutate(day = get_day(timestamp))\r\n\r\n\r\n\r\nOne more particular data anomaly also need to be taken care of for both dataframes—‘Katerina<U+0092>s Caf’ in the location field, which is not decoded by Rstudio properly. I conduct one conversion as below:\r\n\r\n\r\ncc_data_trans$location <- iconv(cc_data$location, \"UTF-8\",\"ASCII\",  sub=\"\")\r\nloyalty_data_trans$location <- iconv(loyalty_data$location, \"UTF-8\",\"ASCII\",  sub=\"\")\r\n\r\n\r\n\r\nNow let’s put the two dataframes together to make a comparison:\r\n\r\n\r\nglimpse(cc_data_trans)\r\n\r\n\r\nRows: 1,490\r\nColumns: 7\r\n$ timestamp  <dttm> 2014-01-06 07:28:00, 2014-01-06 07:34:00, 2014-0~\r\n$ location   <chr> \"Brew've Been Served\", \"Hallowed Grounds\", \"Brew'~\r\n$ price      <dbl> 11.34, 52.22, 8.33, 16.72, 4.24, 4.17, 28.73, 9.6~\r\n$ last4ccnum <fct> 4795, 7108, 6816, 9617, 7384, 5368, 7253, 4948, 9~\r\n$ day        <fct> 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6~\r\n$ hour       <fct> 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7~\r\n$ time       <chr> \"07:28\", \"07:34\", \"07:35\", \"07:36\", \"07:37\", \"07:~\r\n\r\nglimpse(loyalty_data_trans)\r\n\r\n\r\nRows: 1,392\r\nColumns: 5\r\n$ timestamp  <dttm> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, ~\r\n$ location   <chr> \"Brew've Been Served\", \"Brew've Been Served\", \"Ha~\r\n$ price      <dbl> 4.17, 9.60, 16.53, 11.51, 12.93, 4.27, 11.20, 15.~\r\n$ loyaltynum <fct> L2247, L9406, L8328, L6417, L1107, L4034, L6110, ~\r\n$ day        <int> 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6~\r\n\r\nObservations:\r\nIdeally, one employee with one credit card record should corresponds to one loyalty card record.If this is the case,we can derive the pair of credit card and loyalty card owned by the same employee, through (outer right) joining the above two table on field of ‘day’,‘price’ and ‘location’\r\nHowever, loyalty_data_trans has less rows than cc_data_trans.The reason maybe that not both credit card and loyalty card are supported for all of business locations or card holders didn’t make consumption by using both credit card and loyatly card.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-07-28T09:49:54+08:00",
    "input_file": "assignment.knit.md"
  }
]
